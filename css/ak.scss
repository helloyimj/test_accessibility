@charset "UTF-8";

@charset "UTF-8";

// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.

@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  // Common properties for all breakpoints
  %grid-column {
    position: relative;
    width: 100%;
    padding-right: $gutter / 2;
    padding-left: $gutter / 2;
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @if $columns > 0 {
      // Allow columns to stretch full width below their breakpoints
      @for $i from 1 through $columns {
        .col#{$infix}-#{$i} {
          @extend %grid-column;
        }
      }
    }

    .col#{$infix},
    .col#{$infix}-auto {
      @extend %grid-column;
    }

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      // Provide basic `.col-{bp}` classes for equal-width flexbox columns
      .col#{$infix} {
        flex-basis: 0;
        flex-grow: 1;
        min-width: 0; // See https://github.com/twbs/bootstrap/issues/25410
        max-width: 100%;
      }

      @if $grid-row-columns > 0 {
        @for $i from 1 through $grid-row-columns {
          .row-cols#{$infix}-#{$i} {
            @include row-cols($i);
          }
        }
      }

      .col#{$infix}-auto {
        @include make-col-auto();
      }

      @if $columns > 0 {
        @for $i from 1 through $columns {
          .col#{$infix}-#{$i} {
            @include make-col($i, $columns);
          }
        }
      }

      .order#{$infix}-first { order: -1; }

      .order#{$infix}-last { order: $columns + 1; }

      @for $i from 0 through $columns {
        .order#{$infix}-#{$i} { order: $i; }
      }

      @if $columns > 0 {
        // `$columns - 1` because offsetting by the width of an entire row isn't possible
        @for $i from 0 through ($columns - 1) {
          @if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-0
            .offset#{$infix}-#{$i} {
              @include make-col-offset($i, $columns);
            }
          }
        }
      }
    }
  }
}


.main-visual {
	
	.slide_inner {
		display: block;
		position: relative;
		overflow: hidden;
		height: 100vh;
		width: 100%;
		min-height: 500px;
		.video {
			// position: absolute;
			// top: 0;
			// left: 0;
			// right: 0;
			// bottom: 0;
			// width: 100vmax;
			// height: 100vmax;
			// object-fit: cover;

			position: absolute;
			top: 50%;
			left: 50%;
			width: auto;
			height: auto;
			max-height: none;
			max-width: none;
			min-height: 100%;
			min-width: 100%;
			transform: translate(-50%, -50%);
			// @include mdq-max(lg) {
			// 	object-fit: cover;
			// 	max-height: 100%;
			// 	max-width: 100%;
			// }
		}
	}

	// .txt-bx {
	// 	//영역의 중앙 노출
	// 	position: absolute;
	// 	width: 100%;
	// 	top: 50%;
	// 	left: 50%;
	// 	transform: translate(-50%, -50%);
	// 	color: #fff;
	// 	text-shadow: 0 0 1em rgba(#000, 0.1);
	// 	line-height: 1.4;

	// 	//S:trasition
	// 	.title,
	// 	.text {
	// 		transform: translateY(50px);
	// 		opacity: 0;
	// 		transition: 2000ms opacity, 2000ms transform;
	// 	}
	// 	@at-root .main-visual .swiper-slide-active .txt-bx {
	// 		.title,
	// 		.text {
	// 			transform: translateY(0);
	// 			opacity: 1;
	// 		}
	// 	}
	// 	//E:trasition
	// 	.title {
	// 		font-size: em(56);
	// 		font-weight: 700;
	// 		letter-spacing: letterSpacing(-20);
	// 		transition-delay: 300ms;
	// 		&--small {
	// 			font-size: em(36, 56);
	// 		}
	// 	}
	// 	.text {
	// 		letter-spacing: letterSpacing(-40);
	// 		margin-top: 1.5em;
	// 		font-size: em(20);
	// 		// font-weight: 300;
	// 		font-weight: 400;
	// 		transition-delay: 400ms;
	// 	}
	// }

	// @include mdq-max(xl) {
	//   .slide_inner {
	//     &::after {
	//       padding-bottom: percentage(800/1200);
	//     }
	//   }
	// }

	// @include mdq-max(lg) {
	//   .slide_inner {
	//     &::after {
	//       padding-bottom: percentage(800/1200);
	//     }
	//   }
	// }
	// @include mdq-max(sm) {
	// 	// .slide_inner {
	// 	//   &::after {
	// 	//     padding-bottom: percentage(1200/1440);
	// 	//   }
	// 	// }
	// 	.txt-bx {
	// 		//폰트사이즈 일괄축소(vw)
	// 		font-size: 2.6vw;
	// 		.text {
	// 			font-size: em(26);
	// 			br {
	// 				display: none;
	// 			}
	// 		}
	// 	}
	// }

	.scroll-down {
		position: absolute;
		// bottom: rem(60);
		// left: rem(60);
		z-index: 50;
		left: 50%;
		margin-left: -910px;
	}

	// .swiper {
	// 	&-ctrl {
	// 		z-index: 50;
	// 		position: absolute;
	// 		// bottom: rem(60);
	// 		left: 0;
	// 		right: 0;
	// 		width: 100%;
	// 		&__wrap {
	// 			display: flex;
	// 			align-items: center;
	// 		}
	// 		&,
	// 		button {
	// 			color: #fff;
	// 		}
	// 		// @include mdq-max(lg) {
	// 		// 	bottom: 20px;
	// 		// 	&__wrap {
	// 		// 		justify-content: center;
	// 		// 	}
	// 		// }
	// 	}
	// 	// &-pagination {
	// 	// 	position: relative;
	// 	// 	bottom: auto;
	// 	// 	left: auto;
	// 	// 	width: auto;
	// 	// 	// font-size: rem(18);
	// 	// 	display: flex;
	// 	// 	align-items: center;
	// 	// 	justify-content: center;
	// 	// 	margin-right: 1em;
	// 	// 	&-fraction-bar {
	// 	// 		margin: 0 1em;
	// 	// 		height: 0.8em;
	// 	// 		border-left: 1px solid rgba(#fff, 0.5);
	// 	// 	}
	// 	// 	&-current,
	// 	// 	&-total {
	// 	// 		&:before {
	// 	// 			content: '0';
	// 	// 		}
	// 	// 	}
	// 	// }
	// 	// &-toggle {
	// 	// 	display: inline-flex;
	// 	// 	align-items: center;
	// 	// 	margin: 0 0.5em;
	// 	// 	// .btn {
	// 	// 	// 	font-size: rem(20);
	// 	// 	// }
	// 	// }
	// }
}

